/**
 * Graph tcp_client Generated by Emacs/SRecode on 01:41:27.
 */
digraph structs {
	node [shape=record fontsize=12 fontname=Courier];
	
	"tcp_client" [  shape="record" label="{tcp_client|-m_io_service_thread : boost::thread\l-tcp_io_service : boost::asio::io_service\l-m_io_service : boost::asio::io_service\l-status_mutex : boost::mutex\l-status : enStatus\l-socket_ : tcp::socket\l-read_msg_[] : char\l-write_msgs_ : deque\l-m_write_queue : std::queue\l-m_write_queue_mutex : boost::mutex\l-m_rx_queue : std::queue\l-m_rx_queue_mutex : boost::mutex|+tcp_client (_io_service,endpoint_iterator) : tcp_client\l+tcp_client (_io_service) : tcp_client\l+tcp_client (void) : tcp_client\l+connect (host,port) : void\l+write (msg) : void\l+write (_buffer,_lenght) : void\l+close () : void\l+get_connection_status (void) : enStatus\l+rx_queue_empty (void) : bool\l+get_rx_message (void) : buffertype_ptr\l+pop_rx_queue (void) : void\l-do_connect (host,port) : void\l-set_connection_status (_status) : void\l-connect_start (endpoint_iterator) : void\l-connect_complete (error,endpoint_iterator) : void\l-read_start (void) : void\l-read_complete (error,bytes_transferred) : void\l-do_write (msg) : void\l-write_start (void) : void\l-write_complete (error) : void\l-do_write_vct (_buffer_ptr) : void\l-write_start_vct (void) : void\l-write_complete_vct (error) : void\l-do_close () : void}" pos="0,0" ];
}